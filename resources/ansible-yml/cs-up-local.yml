---
- name: install and provisioning dockers PKC Server on docker's host
  hosts: all

  tasks:
  - name: Localhost macOS installation process
    block:
    
    - name: Download mountpoint file/amd64
      get_url:
        url: https://w3d3.pkc-dev.org/res/mountpoint-mac.tar.gz
        dest: "{{ pkc_install_root_dir }}"
      when: ansible_facts['os_family'] == "Darwin"
      async: 1200   # Maximum allowed time in Seconds
      poll: 15      # Polling Interval in Seconds
      register: scrout
      
    - name: Extract Mountpoint
      shell: "tar -xvf ./mountpoint.tar.gz"
      args:
        chdir: "{{ pkc_install_root_dir }}/cs"
        warn: no

    - name: Upload LocalSettings.php and other setting
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: no
      loop:
        - {src: '../../config/LocalSettings.php', dest: './cs/mountpoint/LocalSettings.php'}
        - {src: '../../config-template/timezone', dest: './cs/mountpoint/timezone'}
        - {src: '../../config-template/localtime', dest: './cs/mountpoint/localtime'}
        - {src: '../../config-template/docker-compose-local.yml', dest: './cs/docker-compose.yml'}

    - name: Check docker installation on localhost machine
      shell: "docker info | grep Docker"
      register: docker_output
      ignore_errors: yes

    - name: Execute Docker-compose
      command: "docker-compose up -d"  

    - name: Execute Update on Hosts file
      command: "../script/update-hosts.sh"
      become: yes

    - name: Check docker installation on localhost machine
      shell: "./resources/script/update-sw.sh || /usr/bin/true"
      register: update_script
      ignore_errors: yes    

    - name: Print debug
      ansible.builtin.debug:
        var: update_script

    when: ansible_facts['os_family'] == "Darwin"
    ignore_errors: yes